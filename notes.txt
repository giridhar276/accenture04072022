
** Everything in python is Object ***
** Every object contain methods ******

number
-------
number can be integer or decimal or octal or hexa.

aval = 10
bval = 23.32


string
--------
string is defined in single or double or triple quotes.

aname = 'python programming'
bname = "unix shell scripting"
cname = '''java programming'''
dname = """scala programming"""


list
-------
list contains set of elements.
Elements can be set of numbers or strings or any combination.
list elements are defined in [].

alist = [10,20,30]
blist = ["java","python","oracle"]



tuple  ( read only , immutable , unchangeable)
------
tuple contains set of elements.
Elements can be set of numbers or strings or any combination.
tuple elements are defined in ().
**** Elements inside tuple CAN't be modified directly ****

atup = (34,32,35)
btup = ("c","java","python programming")




dictionary
-----------
dictionary contains elements in key:value pairs
In dictionary,
  keys is integer or string  which is used to uniquely identify the value
  values can be integer or string or list or tuple or dictionary or any other complex structure.

syntax:    object = {key:value , key:value , key:value}
example:    book  = {"chap1":10 , "chap2":20 ,"chap3":30 }
            book  = {"chap1":10 , "chap2":20 ,"chap3":30 ,"chap1":100}  
            values = {1:2,3:4,5:6}         
            values = {1:"python",3:"java",5:"unix"} 
            book  = {"chap1":[10,"Rita","US"] , "chap2":[20,"Gita","IND"])




set
-------
set is unordered collection of unique values of same type.


aset = {10,10,20,30,30,30}
bset = {30,30,30,40,40,50}





C
----

int a = 10 , b = 5 ;

if ( a < b )
{
     ##
     ##
}
else
{ 
     #
     #
}



python
--------

a = 10
b = 5
if a < b :
    ##your logical statements
    ##
    ##
else:
    ##
    ##



level1
level1
level1
level1
if cond:
     level2
     level2
     level2
else:
     level2
     level2
     level2
level1
level1
level1
     

1 to 10
--------

for ( int i = 1; i <=10 ; i++ )
{  
     ##
}


python
----------


for i in range(1,11):
    print(i)









operators
-----------


arithemtic operators :  + - *  % /


assignment operators : ( ++ and -- are NOT allowed in python )
-----------------------

val = 10
val = val + 1    or val+=1
val = val - 1    or val-=1
val = val * 1    or val*=1


logical operators
------------------

&&   ---->  and
||   ---->  or
!    -----> not


name = "python"
if len(name) == 6   and name.isupper():
    # your logic


name = "python"
if len(name) == 6   or name.isupper():
    # your logic


if not name.isupper():
    # your logic


relational operators
-----------------------
< <= > >=  == !=

special operators
------------------
+
*
in
as


library | packages
--------------------

385000+ libraries  in www.pypi.org




file handling
---------------
read mode
write mode
append mode


opening the file
---------------


syntax:   object  = open(filename,mode)
example:    fobj  = open("customers.txt","r")   ---> read mode

example:    fobj  = open("customers.txt","w")   ----> write mode
            case1 :If file is not existing.. file gets created first
            case2 :if file is already existing... it overwrites the existing content and then writes to the file

example:    fobj  = open("customers.txt","a")
            case1 :If file is not existing.. file gets created first
            case2 :if file is already existing... it appends(adds) the existing content and then writes to the file



read operation
---------------------

- reading line by line using fobj
- fobj.readlines()
- fobj.read()
- using csv library
- using pandas library



exception handling
---------------------

1. syntax error
2. semantic error or runtime error


Handling the errors in runtime is known as exception handling.

keywords in exception handling
--------------------------------
try
except
else
finally
raise



try
except
else    ( optional)
finally ( optional)










C
---

function | definition | subroutine 
----------------------------------
-reusability
- define the block once and call it for multiple times.



void add(int a,int b)
{
   int c = a+ b;
   printf("%d",c);
}


add(10,20);

python
-------
def add(a,b):
    c = a+b
    print(c)

add(10,20)

different ways of passing arguments
-------------------------------------

fixed arguments
default arguments
variable length arguments





c header files
-----------------
#include<stdio.h>
#include<math.h>
#include<graphics.h>
#include<conio.h>
#include<string.h>
#include<stdmanip.h>

python 

library | module | package
-----------------------------
All the packages are availalbe in www.pypi.org


builtin libraries
------------------
All the builtin libraries which are generally used by everyone are installed with python.


third party libraries
----------------------
Depending on the requirement (  cloud automation ,  oracle db automation , machine learning , excel operations....)
developer has to install the third party library from www.pypi.org
-third party libraries are NOT available by default.Developer has to install it.

automation
-----------

one file -  delete manually


100 files -


you have to delete 5 files on hourly basis( 24 hours) X 365 




mysql
--------

display all existing databases
------------------------------
show databases;


creating database
--------------------
create database information;


access database
----------------
use information;


display all tables ( initially empty )
---------------------------------------
show tables;

creating table
---------------
create table realestate ( street varchar(100) , city varchar(100) );


inserting records
-----------------
insert into realestate values('HitechCity','Hyderabad');
insert into realestate values('MG Road','Pune');


display all the records
-------------------------
select * from realestate;
























































































































































































































